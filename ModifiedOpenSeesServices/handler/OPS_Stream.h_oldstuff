/* ****************************************************************** **
**    OpenSees - Open System for Earthquake Engineering Simulation    **
**          Pacific Earthquake Engineering Research Center            **
**                                                                    **
**                                                                    **
** (C) Copyright 1999, The Regents of the University of California    **
** All Rights Reserved.                                               **
**                                                                    **
** Commercial use of this program without express permission of the   **
** University of California, Berkeley, is strictly prohibited.  See   **
** file 'COPYRIGHT'  in main directory for information on usage and   **
** redistribution,  and for a DISCLAIMER OF ALL WARRANTIES.           **
**                                                                    **
** Developed by:                                                      **
**   Frank McKenna (fmckenna@ce.berkeley.edu)                         **
**   Gregory L. Fenves (fenves@ce.berkeley.edu)                       **
**   Filip C. Filippou (filippou@ce.berkeley.edu)                     **
**                                                                    **
** ****************************************************************** */

// $Revision: 1.2 $
// $Date: 2003/02/25 23:33:14 $
// $Source: /usr/local/cvs/OpenSees/SRC/handler/ostream.h,v $

#ifndef _ostream
#define _ostream

enum openMode  {OVERWRITE, APPEND};
enum floatField {FIXEDD, SCIENTIFIC};

class ostream
{
    public:
        ostream();
        virtual ~ostream();

        virtual int setFile(const char *fileName, openMode mode = OVERWRITE);
        virtual int setPrecision(int precision);
        virtual int setFloatField(floatField);
        virtual int precision(int precision);
        virtual int width(int width);

        virtual ostream &write(const char *s, int n);
        virtual ostream &write(const unsigned char *s, int n);
        virtual ostream &write(const signed char *s, int n);
        virtual ostream &write(const void *s, int n);

        virtual ostream &operator<<(char c);
        virtual ostream &operator<<(unsigned char c);
        virtual ostream &operator<<(signed char c);
        virtual ostream &operator<<(const char *s);
        virtual ostream &operator<<(const unsigned char *s);
        virtual ostream &operator<<(const signed char *s);
        virtual ostream &operator<<(const void *p);
        virtual ostream &operator<<(int n);
        virtual ostream &operator<<(unsigned int n);
        virtual ostream &operator<<(long n);
        virtual ostream &operator<<(unsigned long n);
        virtual ostream &operator<<(short n);
        virtual ostream &operator<<(unsigned short n);
        virtual ostream &operator<<(bool b);
        virtual ostream &operator<<(double n);
        virtual ostream &operator<<(float n);
};

#endif
