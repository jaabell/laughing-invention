Compiler = GNU
#Compiler = PGI
#Compiler = PARALLEL

#DEBUG_MODE = DEBUG
DEBUG_MODE = NO_DEBUG

PROGRAMMING_MODE = SEQUENTIAL
#PROGRAMMING_MODE = PARALLEL


ifeq ($(PROGRAMMING_MODE), PARALLEL)
  PROGRAMMING_FLAG = -D_PARALLEL_PROCESSING -D_TIMING -D_PETSC
else
  PROGRAMMING_FLAG =
endif


ifeq ($(Compiler), GNU)
 CC++            =  g++
 CC              =  gcc
 FC              =  gfortran
 FORTRAN         =  gfortran
 F90             =
 LINKER          =  g++

ifeq ($(DEBUG_MODE), NO_DEBUG)
  C++FLAGS        = -Wall \
                    -Winline \
                    -O3 \
                    -finline \
                    -finline-functions \
                    -fkeep-inline-functions \
                    -fdefault-inline \
                    -ffloat-store \
                    -ffast-math \
                    -D_LINUX \
                    -D_UNIX \
                    $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val

  CFLAGS          = -O3 \
                    -D_LINUX \
                    -D_UNIX \
                    -D_NOGRAPHICS $(PROGRAMMING_FLAG) -D_TCL84

  FFLAGS          = -O3
  LINKFLAGS       = -O

else
  C++FLAGS        = -Wall \
                    -Winline \
                    -g \
                    -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX \
                     $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val \
                    -D_TEACHING_MODE

  CFLAGS          = -g -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX -D_NOGRAPHICS $(PROGRAMMING_FLAG) -D_TCL84
  FFLAGS          = 
  LINKFLAGS       = -g -pg 

endif


else ifeq ($(Compiler), PGI)
 CC++            =  pgcpp
 CC              =  pgcc
 FC              =  pgf77
 FORTRAN         =  pgf77
# FC              =  g77
# FORTRAN         =  g77
 F90             =  pgf95
 LINKER          =  pgcpp

ifeq ($(DEBUG_MODE), NO_DEBUG)
  C++FLAGS        =  -O \
                    -fkeep-inline-functions \
                    -fdefault-inline \
                    -ffloat-store \
                    -ffast-math \
                    -D_LINUX \
                    -D_UNIX \
                    $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val

  CFLAGS          = -O \
                    -D_LINUX \
                    -D_UNIX \
                    -D_NOGRAPHICS $(PROGRAMMING_FLAG) -D_TCL84

  FFLAGS          = -O
  LINKFLAGS       = -O

else
  C++FLAGS        = -g \
                    -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX \
                     $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val \
                    -D_TEACHING_MODE

  CFLAGS          = -g -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX -D_NOGRAPHICS $(PROGRAMMING_FLAG) -D_TCL84

  FFLAGS          = 
  LINKFLAGS       = -g -pg 

endif

else ifeq ($(Compiler), MPI)
 CC++            =  mpiCC
 CC              =  mpicc
 FC              =  mpif77
 FORTRAN         =  mpif77
 F90             =
 LINKER          =  mpiCC

ifeq ($(DEBUG_MODE), NO_DEBUG)
  C++FLAGS        = -Wall \
                    -Winline \
                    -O \
                    -finline \
                    -finline-functions \
                    -fkeep-inline-functions \
                    -fdefault-inline \
                    -ffloat-store \
                    -ffast-math \
                    -D_LINUX \
                    -D_UNIX \
                    $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val

  CFLAGS          = -Wall -O \
                    -D_LINUX \
                    -D_UNIX \
                    -D_NOGRAPHICS $(PROGRAMMING_FLAG)

  FFLAGS          = -Wall -O
  LINKFLAGS       = -O

else
  C++FLAGS        = -Wall \
                    -Winline \
                    -g \
                    -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX \
                     $(PROGRAMMING_FLAG) \
                    -DBrzi_nDarray_val \
                    -D_TEACHING_MODE

  CFLAGS          = -Wall -g -pg \
                    -D_G3DEBUG \
                    -D_LINUX \
                    -D_UNIX -D_NOGRAPHICS $(PROGRAMMING_FLAG)
  FFLAGS          = -Wall
  LINKFLAGS       = -g -pg -Wall

endif

endif



AR     = ar 
ARFLAGS   = cqls


MAKE            = make
CD              = cd
ECHO            = echo
RM              = rm
RMFLAGS         = -fr
SHELL           = /bin/sh


