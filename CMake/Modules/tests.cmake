#Definition of how test files are processed and executables created

#Build test targets
 message(STATUS "Check if there are tests")
if(EXISTS "${RealESSI_TestFile}")
    message(STATUS "Test executables to create")
    READ_FILE("${RealESSI_TestFile}" contents)
    foreach(test_cfgf ${contents})
        get_filename_component(pathTst ${test_cfgf} DIRECTORY)
        message(STATUS "Test(s) found on: ${pathTst}")
        READ_FILE("${test_cfgf}" test_contents) #Read the files pointed by cmake tests
        set(TST_SRCS "")
        set(TST_FLAGS "")
        set(TST_LIBS "")
        set(TST_NAME "")
        set(TST_PROCESSING OFF)
        foreach(test_cfg ${test_contents})
            IS_COMMENT(${test_cfg} CMNT)
            if(NOT CMNT)
                #message(STATUS "line read: ${test_cfg}")
                string(REGEX MATCH "^testname:.*$" is_name ${test_cfg})
                string(REGEX MATCH "^flags:.*$" is_flags ${test_cfg})
                string(REGEX MATCH "^src:.*$" is_src ${test_cfg})
                string(REGEX MATCH "^lib:.*$" is_lib ${test_cfg})
                TOKENIZE(test_cfg)
                list(GET test_cfg 1 temp_val)
                if(is_name)
                    set(TST_NAME "${temp_val}")
                    if(TST_PROCESSING)
                        message(STATUS "Ready to compile test ${TST_NAME}...")
                        add_executable(${TST_NAME} ${TST_SRCS})
                        LINK_LIBS(${TST_NAME} TST_LIBS)
                        set(TST_SRCS "")
                        set(TST_FLAGS "")
                        set(TST_LIBS "")
                    else()
                        set(TST_PROCESSING ON)
                    endif()
                     message(STATUS "Name!: ${TST_NAME}")
                elseif(is_flags AND TST_PROCESSING)
                    set(TST_FLAGS "${TST_FLAGS} ${temp_val}")
                    #message(STATUS "Flag!: ${TST_FLAGS}")
                elseif(is_src AND TST_PROCESSING)
                    list(APPEND TST_SRCS  "${pathTst}/${temp_val}")
                    #message(STATUS "Sources!: ${TST_SRCS}")
                elseif(is_lib AND TST_PROCESSING)
                    if("${temp_val}" STREQUAL "ESSI_LIBS")
                        set(temp_val ${ESSI_LIBS})
                    endif()
                    #TODO: Check if the incoming library already exists in the imported ones
                    #set(TST_LIBS "${TST_LIBS} ${temp_val}")
                    list(APPEND TST_LIBS  ${temp_val})
                    #message(STATUS "Library!: ${TST_LIBS}")
                else(is_name)
                    message(STATUS "Out of order entry.")
                endif(is_name )
            endif()
        endforeach()
        if(TST_PROCESSING)
            message(STATUS "Ready to compile test ${TST_NAME}...")
            add_executable(${TST_NAME} ${TST_SRCS})
            #message(STATUS "${TST_LIBS}...")# \nContent: ${TST_LIBS}")
            LINK_LIBS(${TST_NAME} TST_LIBS)
          endif()
        #message(STATUS "${pathTst}... File content: ${test_contents}")
    endforeach()
    file(REMOVE ${RealESSI_TestFile})
endif()
