// ESSI Test Suite
// ---------------------------------------------------------------------


model name "brick_8node_elastic";

rho = 1000*kg/m^3;
E = 10000*kg/m/s/s;
nu = 0.25;

//  ===========================================================
//     Stage 02
//  ===========================================================

add acceleration field No 1 ax =  0* g ay =  0* g az = -10*m/s/s;

add material # 1 type linear_elastic_isotropic_3d 
	mass_density = rho
	elastic_modulus = E
	poisson_ratio = nu;


new loading stage "1";

add node # 1 at (1* m, 1* m, 0* m) with 3 dofs;
add node # 2 at (0* m, 1* m, 0* m) with 3 dofs;
add node # 3 at (0* m, 0* m, 0* m) with 3 dofs;
add node # 4 at (1* m, 0* m, 0* m) with 3 dofs;
add node # 5 at (1* m, 1* m, 1* m) with 3 dofs;
add node # 6 at (0* m, 1* m, 1* m) with 3 dofs;
add node # 7 at (0* m, 0* m, 1* m) with 3 dofs;
add node # 8 at (1* m, 0* m, 1* m) with 3 dofs;

fix node No 1 dofs all;
fix node No 2 dofs all;
fix node No 3 dofs all;
fix node No 4 dofs all;


add load # 1 to node # 5 type linear 
	Fz = -10*kN;
add load # 2 to node # 6 type linear 
	Fz = -10*kN;
add load # 3 to node # 7 type linear 
	Fz = -10*kN;
add load # 4 to node # 8 type linear 
	Fz = -10*kN;
	
add element No 1 type 8NodeBrick_elastic with nodes (5, 6, 7, 8, 1, 2, 3, 4)  
	use material No 1;
//add load # 1 to element # 1 type self_weight use acceleration field # 1;

define load factor increment 0.5;
define convergence test Norm_Displacement_Increment
	tolerance = 1e-6*mm 
	maximum_iterations = 10 
	verbose_level = 0;
define algorithm Newton;
define solver ProfileSPD;
simulate 2 steps using static algorithm;

// print node # 5;

//  ===========================================================
//     Stage 02
//  ===========================================================


// new loading stage "stage_2";

// add node # 9 at (1* m, 1* m, 2* m) with 3 dofs;
// add node # 10 at (0* m, 1* m, 2* m) with 3 dofs;
// add node # 11 at (0* m, 0* m, 2* m) with 3 dofs;
// add node # 12 at (1* m, 0* m, 2* m) with 3 dofs;


// add material # 2 type linear_elastic_isotropic_3d 
// 	mass_density = rho*0
// 	elastic_modulus = E
// 	poisson_ratio = nu;
	
// add element No 2 type 8NodeBrick_elastic with nodes (9,10,11,12, 5, 6, 7, 8)  
// 	use material No 2;
// //add load # 2 to element # 2 type self_weight use acceleration field # 1;

// define load factor increment 0.5;
// define convergence test Norm_Displacement_Increment
// 	tolerance = 1e-6*mm
// 	maximum_iterations = 10 
// 	verbose_level = 0;
// define algorithm Newton;
// define solver ProfileSPD;

// simulate 100 steps using static algorithm;


// print node # 5;
// print node # 9;

bye;

